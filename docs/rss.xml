<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Shark Blog</title><link>https://kssklol.github.io</link><description>emmm... 你好？
这是我的脚本群QQ:728293118</description><copyright>Shark Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/165453323?s=400&amp;u=314ab72b21552d28d4b8a4085563d3486dc017a0&amp;v=4</url><title>avatar</title><link>https://kssklol.github.io</link></image><lastBuildDate>Wed, 26 Jun 2024 02:38:28 +0000</lastBuildDate><managingEditor>Shark Blog</managingEditor><ttl>60</ttl><webMaster>Shark Blog</webMaster><item><title>oioioi</title><link>https://kssklol.github.io/post/oioioi.html</link><description>```Gmeek-html&#13;
&lt;iframe src='//player.bilibili.com/player.html?isOutside=true&amp;aid=112593121379073&amp;bvid=BV1nMGseZEkF&amp;cid=500001577767651&amp;p=1' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true' width='100%' height='460px'&gt;&lt;/iframe&gt;&#13;
```。</description><guid isPermaLink="true">https://kssklol.github.io/post/oioioi.html</guid><pubDate>Wed, 26 Jun 2024 02:38:01 +0000</pubDate></item><item><title>oioioi</title><link>https://kssklol.github.io/post/oioioi.html</link><description>`Gmeek-html&lt;iframe src='//player.bilibili.com/player.html?isOutside=true&amp;aid=112593121379073&amp;bvid=BV1nMGseZEkF&amp;cid=500001577767651&amp;p=1' scrolling='no' border='0' frameborder='no' framespacing='0' allowfullscreen='true' width='100%' height='460px'&gt;&lt;/iframe&gt;`。</description><guid isPermaLink="true">https://kssklol.github.io/post/oioioi.html</guid><pubDate>Wed, 26 Jun 2024 02:17:30 +0000</pubDate></item><item><title>油猴脚本跳卡密</title><link>https://kssklol.github.io/post/you-hou-jiao-ben-tiao-qia-mi.html</link><description>```js&#13;
// ==UserScript==&#13;
// @name         [Working] shark json&#13;
// @namespace    http://tampermonkey.net/&#13;
// @homepageURL  https://bypass.city&#13;
// @description  just waits 15 seconds for krnl and works fine with the other stuff 2 (it waits no time for other stuff) :)&#13;
// @author       Discord: varram#6209&#13;
// @match        *://*.linkvertise.com/*&#13;
// @match        *://*.linkvertise.net/*&#13;
// @match        *://*.link-to.net/*&#13;
// @match        *://bypass.city/*&#13;
// @match        http://localhost:3000/*&#13;
// @exclude      *://publisher.linkvertise.com/*&#13;
// @exclude      *://linkvertise.com&#13;
// @exclude      *://linkvertise.com/search*&#13;
// @exclude      *://blog.linkvertise.com&#13;
// @exclude      *://blog.linkvertise.com/*&#13;
// @exclude      https://linkvertise.com/assets/vendor/thinksuggest.html&#13;
// @exclude      https://linkvertise.com/assets/vendor/*&#13;
// @exclude      https://publisher.linkvertise.com/*&#13;
// @exclude      *://link-mutation.linkvertise.com/*&#13;
// @grant        GM_getValue&#13;
// @grant        GM_setValue&#13;
// @grant        GM_deleteValue&#13;
// @grant        GM_addStyle&#13;
// @grant        GM.getValue&#13;
// @grant        GM_xmlhttpRequest&#13;
// @grant        GM.setValue&#13;
// @grant        GM.deleteValue&#13;
// @version      11.0.6&#13;
// @author       varram&#13;
// @connect      bypass.city&#13;
// @icon         https://bypass.city/favicon.ico&#13;
// ==/UserScript==&#13;
 &#13;
 &#13;
/* &#13;
release: sk json, 11/9/2023, 8:55:24 PM&#13;
additional copyright/license info:&#13;
© All Rights Reserved&#13;
 &#13;
Linkvertise Bypass © 2023 by shark, suspect &amp; bypass.city team&#13;
*/&#13;
 &#13;
(() =&gt; {&#13;
  // src/bypass-city.ts&#13;
  var bypassCityListener = async () =&gt; {&#13;
    if (window.location.hostname !== 'bypass.city' &amp;&amp; window.location.hostname !== 'localhost') {&#13;
      return;&#13;
    }&#13;
    injectScriptInfo();&#13;
    window.addEventListener('bypassComplete', async (event) =&gt; {&#13;
      const data = event.detail;&#13;
      console.log('bypassMessage', data);&#13;
      GM_setValue('bypass.data', data);&#13;
      window.open(data.url, '_self', 'noopener,noreferrer');&#13;
    });&#13;
  };&#13;
  var injectScriptInfo = () =&gt; {&#13;
    const injectJs = `&#13;
    window.scriptInfo = {&#13;
        version: '${'11.0.6'}',&#13;
        buildTime: '${'11/9/2023, 7:39:06 PM'}',&#13;
        branch: '${'release'}',&#13;
        release: '${'5c96a51'}',&#13;
        installed: true,&#13;
    }`;&#13;
    const script = document.createElement('script');&#13;
    script.textContent = injectJs;&#13;
    document.body.appendChild(script);&#13;
  };&#13;
 &#13;
  // src/notify.scss&#13;
  var notify_default = `.notification {&#13;
  position: fixed;&#13;
  top: 10px;&#13;
  right: 10px;&#13;
  margin: 10px;&#13;
  padding: 10px;&#13;
  padding-right: 20px;&#13;
  background-color: #25262b;&#13;
  color: white;&#13;
  transition: opacity 0.6s; /* 600ms to fade out */&#13;
  z-index: 4000000;&#13;
  border-radius: 10px; /* Rounded border */&#13;
  border: 2px solid #3b5bdb;&#13;
  animation: glow 1s ease-in-out infinite alternate;&#13;
}&#13;
 &#13;
.notification .grid-container {&#13;
  display: grid;&#13;
  grid-template-columns: auto auto;&#13;
  gap: 10px;&#13;
}&#13;
 &#13;
.notification .links {&#13;
  display: flex;&#13;
  justify-content: right;&#13;
  align-items: center;&#13;
}&#13;
 &#13;
.notification .links span {&#13;
  padding-bottom: 4px;&#13;
  opacity: 0.7;&#13;
}&#13;
 &#13;
.notification .links a, .notification .links span {&#13;
  display: block;&#13;
  color: white;&#13;
  font-size: 0.8rem;&#13;
  padding: 5px;&#13;
  margin-bottom: 5px;&#13;
}&#13;
 &#13;
.grid-item img {&#13;
  margin-top: 15px;&#13;
  margin-right: 5px;&#13;
  width: 32px;&#13;
}&#13;
 &#13;
.grid-item h3 {&#13;
  padding-top: 10px;&#13;
  padding-bottom: 3px;&#13;
  font-size: 1.5rem;&#13;
  color: white;&#13;
}&#13;
 &#13;
.grid-item p {&#13;
  font-style: italic;&#13;
  font-size: 1rem;&#13;
  color: white;&#13;
}&#13;
.grid-item p a {&#13;
  opacity: 1;&#13;
  font-weight: 600;&#13;
  text-decoration: underline !important;&#13;
  margin-bottom: 8px;&#13;
  display: inline-block;&#13;
}&#13;
 &#13;
.grid-item h3, .grid-item p {&#13;
  margin: 0;&#13;
}&#13;
 &#13;
@keyframes glow {&#13;
  from {&#13;
    box-shadow: 0 0 10px #3b5bdb;&#13;
  }&#13;
  to {&#13;
    box-shadow: 0 0 20px #3b5bdb;&#13;
  }&#13;
}`;&#13;
 &#13;
  // src/notify-element.html&#13;
  var notify_element_default = '&lt;div id='bypass-notification' class='notification'&gt;\n    &lt;div class='grid-container'&gt;\n      &lt;div class='grid-item'&gt;\n        &lt;img height='32' src='https://bypass.city/images/android-chrome-192x192.png' alt='Notification'&gt;\n      &lt;/div&gt;\n      &lt;div class='grid-item'&gt;\n        &lt;h3 id='title'&gt;&lt;/h3&gt;\n        &lt;p&gt;\n            &lt;span id='text'&gt;&lt;/span&gt;\n            &lt;a id='help' href='https://discord.gg/tX8G9G5BMV'&gt;Get Support on our Discord&lt;/a&gt;\n        &lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n   \n      &lt;div id='links' class='links'&gt;\n        &lt;span id='version'&gt;Release&lt;/span&gt;\n        &lt;span&gt;&amp;#8226;&lt;/span&gt;\n        &lt;a  href='https://discord.gg/tX8G9G5BMV'&gt;Get Support&lt;/a&gt;\n        &lt;span&gt;&amp;#8226;&lt;/span&gt;\n        &lt;a href='https://bypass.city/privacy'&gt;Privacy Policy&lt;/a&gt;\n      \n      &lt;/div&gt;\n  &lt;/div&gt;\n  ';&#13;
 &#13;
  // src/notify.ts&#13;
  var BypassElement = class extends HTMLElement {&#13;
    static get observedAttributes() {&#13;
      return ['text', 'title', 'is-help'];&#13;
    }&#13;
    constructor() {&#13;
      super();&#13;
      const shadow = this.attachShadow({ mode: 'open' });&#13;
      const style = document.createElement('style');&#13;
      style.textContent = notify_default;&#13;
      const div = document.createElement('div');&#13;
      div.innerHTML = notify_element_default;&#13;
      shadow.appendChild(style);&#13;
      shadow.appendChild(div);&#13;
      shadow.getElementById('version').innerText = '鲨 js 1.0.0';&#13;
    }&#13;
    connectedCallback() {&#13;
      this.updateContent();&#13;
    }&#13;
    attributeChangedCallback(name, oldValue, newValue) {&#13;
      this.updateContent();&#13;
    }&#13;
    updateContent() {&#13;
      const text = this.getAttribute('text') || '';&#13;
      const title = this.getAttribute('title') || '';&#13;
      const isHelp = this.hasAttribute('is-help');&#13;
      if (isHelp) {&#13;
        this.shadowRoot.getElementById('links').remove();&#13;
      }&#13;
      this.shadowRoot.getElementById('help').style.display = isHelp ? 'block' : 'none';&#13;
      this.shadowRoot.querySelector('#title').textContent = title;&#13;
      this.shadowRoot.querySelector('#text').textContent = text;&#13;
    }&#13;
  };&#13;
  customElements.define('bypass-notification', BypassElement);&#13;
  var notify = ({ text, title, isHelp }) =&gt; {&#13;
    const titleContent = title || '跳验证正在加载...';&#13;
    const textContent = text || '稍等，会有一个网页跳转';&#13;
    const notificationElement = document.createElement('bypass-notification');&#13;
    notificationElement.setAttribute('title', titleContent);&#13;
    notificationElement.setAttribute('text', textContent);&#13;
    if (isHelp) {&#13;
      notificationElement.setAttribute('is-help', 'true');&#13;
    }&#13;
    document.body.appendChild(notificationElement);&#13;
  };&#13;
 &#13;
  // src/fetch.ts&#13;
  var jsonFetch = async (url, options) =&gt; {&#13;
    return new Promise((resolve, reject) =&gt; {&#13;
      GM_xmlhttpRequest({&#13;
        method: options.method,&#13;
        data: options.data ? JSON.stringify(options.data) : void 0,&#13;
        headers: options.headers,&#13;
        url,&#13;
        onload: (response) =&gt; {&#13;
          if (response.responseText &amp;&amp; typeof response.responseText === 'string') {&#13;
            try {&#13;
              const data = JSON.parse(response.responseText);&#13;
              resolve(data);&#13;
            } catch (e) {&#13;
              reject();&#13;
            }&#13;
          } else {&#13;
            reject();&#13;
          }&#13;
        },&#13;
        onerror: reject,&#13;
        ontimeout: reject,&#13;
        onabort: reject,&#13;
        timeout: 5e3&#13;
      });&#13;
    });&#13;
  };&#13;
 &#13;
  // src/ping.ts&#13;
  var ping = async () =&gt; {&#13;
    try {&#13;
      const data = await jsonFetch(`${'https://bypass.city'}/.well-known/ping.json`, {&#13;
        method: 'GET',&#13;
        headers: {&#13;
          'Content-Type': 'application/json'&#13;
        }&#13;
      });&#13;
      return data.ping;&#13;
    } catch (e) {&#13;
      notify({&#13;
        title: '无法访问服务器！',&#13;
        isHelp: true&#13;
      });&#13;
      return false;&#13;
    }&#13;
  };&#13;
 &#13;
  // src/utils.ts&#13;
  var sleep = (ms) =&gt; new Promise((resolve) =&gt; setTimeout(resolve, ms));&#13;
 &#13;
  // src/linkvertise.ts&#13;
  var linkvertiseListener = async () =&gt; {&#13;
    if (!matchLinkvertise(window.location.href)) {&#13;
      return;&#13;
    }&#13;
    const bypassData = GM_getValue('bypass.data');&#13;
    if (bypassData) {&#13;
      if (window.location.href.includes('linkvertise.com/48193/')) {&#13;
        notify({&#13;
          title: '发现KRNL!',&#13;
          text: '绕过krnl，请等待15秒\n以避免被列入黑名单！'&#13;
        });&#13;
        await sleep(15e3);&#13;
      } else {&#13;
        notify({});&#13;
        await sleep(2e3);&#13;
      }&#13;
      const targetUrl = bypassData.bypassData;&#13;
      GM_deleteValue('bypass.data');&#13;
      window.open(targetUrl, '_self');&#13;
    } else {&#13;
      const testConnectivity = await ping();&#13;
      if (testConnectivity) {&#13;
        notify({});&#13;
        await sleep(2e3);&#13;
        const bypassCityUrl = new URL(`${'https://bypass.city'}/bypass`);&#13;
        bypassCityUrl.searchParams.set('bypass', encodeURIComponent(window.location.href));&#13;
        bypassCityUrl.searchParams.set('userscript', 'true');&#13;
        bypassCityUrl.searchParams.set('userscript-version', '11.0.6');&#13;
        window.open(bypassCityUrl.href, '_self');&#13;
      }&#13;
    }&#13;
  };&#13;
  var matchLinkvertise = (url) =&gt; {&#13;
    const regex = /https?:\/\/(linkvertise\.(com|download)|(link-(center|target|hub|to)|direct-link|file-link)\.net)/i;&#13;
    return regex.test(url) &amp;&amp; !url.startsWith('https://linkvertise.com/profile') &amp;&amp; !url.startsWith('https://linkvertise.com/login');&#13;
  };&#13;
 &#13;
  // src/main.ts&#13;
  (async () =&gt; {&#13;
    console.info('Linkvertise Userscript', '鲨 js 1.0.0', window.location.href);&#13;
    await bypassCityListener();&#13;
    await linkvertiseListener();&#13;
  })();&#13;
})();&#13;
```。</description><guid isPermaLink="true">https://kssklol.github.io/post/you-hou-jiao-ben-tiao-qia-mi.html</guid><pubDate>Tue, 25 Jun 2024 11:29:44 +0000</pubDate></item><item><title>ping &amp; fps</title><link>https://kssklol.github.io/post/ping%20%26%20fps.html</link><description>```lua&#13;
-- 创建 Ping 标签&#13;
local pingLabel = Instance.new('TextLabel')&#13;
pingLabel.Name = 'PingLabel'&#13;
pingLabel.Parent = SkK&#13;
pingLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)&#13;
pingLabel.BackgroundTransparency = 1&#13;
pingLabel.Position = UDim2.new(0, 10, 0, 160)&#13;
pingLabel.Size = UDim2.new(0, 200, 0, 20)&#13;
pingLabel.Font = Enum.Font.SourceSans&#13;
pingLabel.TextSize = 14&#13;
pingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)&#13;
&#13;
-- 创建 FPS 标签&#13;
local fpsLabel = Instance.new('TextLabel')&#13;
fpsLabel.Name = 'FPSLabel'&#13;
fpsLabel.Parent = SkK&#13;
fpsLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)&#13;
fpsLabel.BackgroundTransparency = 1&#13;
fpsLabel.Position = UDim2.new(0, 10, 0, 190)&#13;
fpsLabel.Size = UDim2.new(0, 200, 0, 20)&#13;
fpsLabel.Font = Enum.Font.SourceSans&#13;
fpsLabel.TextSize = 14&#13;
fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)&#13;
&#13;
-- 更新函数，实时显示 Ping 和 FPS&#13;
local function UpdatePingAndFPS()&#13;
    -- 获取当前 Ping 和 FPS&#13;
    local ping = game.Stats.PerformanceStats.Ping:GetValue()&#13;
    local fps = game.Stats.PerformanceStats.FPS:GetValue()&#13;
    &#13;
    -- 更新 Ping 和 FPS 标签文本&#13;
    pingLabel.Text = 'Ping: ' .. tostring(ping) .. ' ms'&#13;
    fpsLabel.Text = 'FPS: ' .. tostring(fps)&#13;
end&#13;
&#13;
-- 初始调用一次更新函数&#13;
UpdatePingAndFPS()&#13;
&#13;
-- 每秒调用一次更新函数，实现实时显示&#13;
game:GetService('RunService').Heartbeat:Connect(function()&#13;
    UpdatePingAndFPS()&#13;
end)&#13;
&#13;
-- 创建 FPS 标签&#13;
local fpsLabel = Instance.new('TextLabel')&#13;
fpsLabel.Name = 'FPSLabel'&#13;
fpsLabel.Parent = SkK&#13;
fpsLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)&#13;
fpsLabel.BackgroundTransparency = 1&#13;
fpsLabel.Position = UDim2.new(0, 10, 0, 190)&#13;
fpsLabel.Size = UDim2.new(0, 200, 0, 20)&#13;
fpsLabel.Font = Enum.Font.SourceSans&#13;
fpsLabel.TextSize = 14&#13;
fpsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)&#13;
&#13;
-- 定义 FPS 更新函数&#13;
local function UpdateFPS()&#13;
    local now = tick()  -- 获取当前时间&#13;
    local dt = now - (lastUpdate or now)  -- 计算时间差&#13;
    local fps = 1 / dt  -- 计算 FPS&#13;
    lastUpdate = now  -- 更新上次更新时间&#13;
    &#13;
    -- 更新 FPS 标签文本&#13;
    fpsLabel.Text = 'FPS: ' .. tostring(math.floor(fps + 0.5))&#13;
end&#13;
&#13;
-- 初始调用一次更新函数&#13;
UpdateFPS()&#13;
&#13;
-- 每帧调用一次更新函数，实现实时显示&#13;
game:GetService('RunService').RenderStepped:Connect(function()&#13;
    UpdateFPS()&#13;
end)&#13;
```。</description><guid isPermaLink="true">https://kssklol.github.io/post/ping%20%26%20fps.html</guid><pubDate>Tue, 25 Jun 2024 10:55:54 +0000</pubDate></item><item><title>Blade Ball (刀刃球)</title><link>https://kssklol.github.io/post/Blade%20Ball%20%28-dao-ren-qiu-%29.html</link><description>AutoParry V2 源码&#13;
&#13;
```lua&#13;
local Players = game:GetService('Players')&#13;
local VirtualInputManager = game:GetService('VirtualInputManager')&#13;
&#13;
local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()&#13;
local Balls = workspace:WaitForChild('Balls', 9e9)&#13;
&#13;
local function VerifyBall(Ball)&#13;
    if typeof(Ball) == 'Instance' and Ball:IsA('BasePart') and Ball:IsDescendantOf(Balls) and Ball:GetAttribute('realBall') == true then&#13;
        return true&#13;
    end&#13;
end&#13;
&#13;
local function IsTarget()&#13;
    return (Player.Character and Player.Character:FindFirstChild('Highlight'))&#13;
end&#13;
&#13;
local function Parry()&#13;
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)&#13;
    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)&#13;
end&#13;
&#13;
Balls.ChildAdded:Connect(function(Ball)&#13;
    if not VerifyBall(Ball) then&#13;
        return&#13;
    end&#13;
&#13;
    local OldPosition = Ball.Position&#13;
    local OldTick = tick()&#13;
&#13;
    Ball:GetPropertyChangedSignal('Position'):Connect(function()&#13;
        if IsTarget() then&#13;
            local Distance = (Ball.Position - workspace.CurrentCamera.Focus.Position).Magnitude&#13;
            local Velocity = (OldPosition - Ball.Position).Magnitude&#13;
&#13;
            if (Distance / Velocity) &lt;= 10 then&#13;
                Parry()&#13;
            end&#13;
        end&#13;
&#13;
        if (tick() - OldTick &gt;= 1/60) then&#13;
            OldTick = tick()&#13;
            OldPosition = Ball.Position&#13;
        end&#13;
    end)&#13;
end)&#13;
```&#13;
&#13;
阉割了。</description><guid isPermaLink="true">https://kssklol.github.io/post/Blade%20Ball%20%28-dao-ren-qiu-%29.html</guid><pubDate>Tue, 25 Jun 2024 10:43:57 +0000</pubDate></item><item><title>聊天框</title><link>https://kssklol.github.io/post/liao-tian-kuang.html</link><description>改了聊天框的界面&#13;
&#13;
```lua&#13;
if game:GetService('TextChatService').ChatVersion == Enum.ChatVersion.TextChatService then&#13;
    &#13;
    local self = game:GetService('CoreGui').TopBarApp.TopBarFrame.LeftFrame.ChatIcon.Background&#13;
        &#13;
    &#13;
    local Players, Plrs, CL = {}, game:GetService('Players'):GetPlayers(), ''&#13;
    chatwindow, chatbar =&#13;
        game:GetService('TextChatService').ChatWindowConfiguration,&#13;
        game:GetService('TextChatService').ChatInputBarConfiguration&#13;
   chatwindow.Enabled = true&#13;
   chatbar.Enabled = true&#13;
    for i, v in next, game:GetService('Players'):GetPlayers() do&#13;
        Players[v] = {&#13;
            Player = v,&#13;
            Color = Color3.fromRGB(&#13;
                tostring(v.UserId):sub(1, 2),&#13;
                tostring(v.UserId):sub(3, 4),&#13;
                tostring(v.UserId):sub(5, 6)&#13;
            )&#13;
        }&#13;
    end&#13;
    game:GetService('Players').ChildAdded:Connect(&#13;
        function()&#13;
            Players = nil&#13;
            Players = {}&#13;
            for i, v in next, game:GetService('Players'):GetPlayers() do&#13;
                Players[v] = {&#13;
                    Player = v,&#13;
                    Color = Color3.fromRGB(&#13;
                        tostring(v.UserId):sub(1, 2),&#13;
                        tostring(v.UserId):sub(3, 4),&#13;
                        tostring(v.UserId):sub(5, 6)&#13;
                    )&#13;
                }&#13;
            end&#13;
        end&#13;
    )&#13;
    game:GetService('Players').ChildRemoved:Connect(&#13;
        function()&#13;
            Players = nil&#13;
            Players = {}&#13;
            for i, v in next, game:GetService('Players'):GetPlayers() do&#13;
                Players[v] = {&#13;
                    Player = v,&#13;
                    Color = Color3.fromRGB(&#13;
                        tostring(v.UserId):sub(1, 2),&#13;
                        tostring(v.UserId):sub(3, 4),&#13;
                        tostring(v.UserId):sub(5, 6)&#13;
                    )&#13;
                }&#13;
            end&#13;
        end&#13;
    )&#13;
    local g = Instance.new('ScreenGui', game:GetService('CoreGui'))&#13;
    g.ResetOnSpawn = false&#13;
    new = Instance.new('ScrollingFrame', g)&#13;
    new.Position = UDim2.new(0, chatwindow.AbsolutePosition.X, 0, chatwindow.AbsolutePosition.Y)&#13;
    new.Size = UDim2.new(0, chatwindow.AbsoluteSize.X, 0, chatwindow.AbsoluteSize.Y)&#13;
    new.BackgroundColor3 = Color3.fromRGB(69, 68, 69)&#13;
    new.BackgroundTransparency = 0.3&#13;
    new.BorderSizePixel = 0&#13;
    new.CanvasSize = UDim2.new(0, 0, 0, 0)&#13;
    new.AutomaticCanvasSize = Enum.AutomaticSize.Y&#13;
    newChatBar = Instance.new('TextBox', g)&#13;
    newChatBar.BackgroundColor3 = Color3.fromRGB(89, 89, 89)&#13;
    newChatBar.BackgroundTransparency = 0.5&#13;
    newChatBar.BorderSizePixel = 0&#13;
    newChatBar.Position = UDim2.new(0, chatbar.AbsolutePosition.X, 0, chatbar.AbsolutePosition.Y)&#13;
    newChatBar.PlaceholderText = '有问题写/帮助'&#13;
    newChatBar.Size = UDim2.new(0, chatbar.AbsoluteSize.X, 0, chatbar.AbsoluteSize.Y)&#13;
    newChatBar.Font = Enum.Font.GothamMedium&#13;
    newChatBar.TextSize = 18&#13;
    newChatBar.TextColor3 = Color3.fromRGB(15, 15, 15)&#13;
    newChatBar.Text = ''&#13;
    newChatBar.TextTransparency = 0.5&#13;
    newChatBar.ClearTextOnFocus = false&#13;
    local corner = Instance.new('UICorner', newChatBar)&#13;
    corner.CornerRadius = UDim.new(0, 8)&#13;
    chatwindow.Enabled = false&#13;
    chatbar.Enabled = false&#13;
&#13;
    local ol = Instance.new('UICorner', new)&#13;
    ol.CornerRadius = UDim.new(0, 12)&#13;
    local layout = Instance.new('UIListLayout', new)&#13;
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center&#13;
    function addMessage(Message, Player, Channel)&#13;
        local Plr = Player&#13;
        local disp = Plr.DisplayName&#13;
        local label = Instance.new('TextButton', new)&#13;
&#13;
        label.BackgroundTransparency = 1&#13;
        label.Font = Enum.Font.GothamBlack&#13;
        label.RichText = true&#13;
&#13;
        label.Text = string.format('&lt;font color = 'rgb(%03d, %03d, %03d)'&gt;&lt;font size = '16'&gt;@%s&lt;/font&gt;&lt;/font&gt;: %s', Players[Plr].Color.R * 255, Players[Plr].Color.G * 255, Players[Plr].Color.B * 255, disp, Message)&#13;
        label.TextColor3 = Color3.fromRGB(195, 195, 195)&#13;
        label.Size = UDim2.new(0, 220, 0, 30 + (#Message / 3))&#13;
        label.TextSize = 14&#13;
        label.TextWrapped = true&#13;
    label.MouseButton1Click:Connect(function()&#13;
        newChatBar.Text = newChatBar.Text..' @'..disp&#13;
        newChatBar:CaptureFocus()&#13;
      end)&#13;
    end&#13;
    newChatBar.FocusLost:Connect(&#13;
    function(enter)&#13;
        if enter then&#13;
            if newChatBar.Text == '/控制台' or newChatBar.Text == '/console' then&#13;
                game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.F9, false, game)&#13;
                game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.F9, false, game)&#13;
            elseif newChatBar.Text == '/帮助' then&#13;
                chatbar.TargetTextChannel:DisplaySystemMessage(&#13;
                    '打开控制台: /控制台'&#13;
                )&#13;
                chatbar.TargetTextChannel:DisplaySystemMessage(&#13;
                    '下载聊天: /下载'&#13;
                )&#13;
          chatbar.TargetTextChannel:DisplaySystemMessage(&#13;
                    '清理聊天内容: /清理'&#13;
                )&#13;
          chatbar.TargetTextChannel:DisplaySystemMessage(&#13;
                    '尝试 (/i, /under, /strike Hello)!'&#13;
                )&#13;
           elseif newChatBar.Text == '/下载' then&#13;
            writefile('TCS+', CL)&#13;
           elseif newChatBar.Text:sub(1, 2) == '/i' then chatbar.TargetTextChannel:SendAsync(newChatBar.Text:gsub('/i', '')) addMessage([[&lt;i&gt;]]..newChatBar.Text:gsub('/i', '')..'&lt;/i&gt;', game:GetService('Players').LocalPlayer, chatbar.TargetTextChannel) elseif newChatBar.Text:sub(1, 6) == '/under' then chatbar.TargetTextChannel:SendAsync(newChatBar.Text:gsub('/under', '')) addMessage([[&lt;u&gt;]]..newChatBar.Text:gsub('/under', '')..'&lt;/u&gt;', game:GetService('Players').LocalPlayer, chatbar.TargetTextChannel) elseif newChatBar.Text:sub(1, 7) == '/strike' then chatbar.TargetTextChannel:SendAsync(newChatBar.Text:gsub('/strike', '')) addMessage([[&lt;s&gt;]]..newChatBar.Text:gsub('/strike', '')..'&lt;/s&gt;', game:GetService('Players').LocalPlayer, chatbar.TargetTextChannel) elseif newChatBar.Text == '/清理' then for i, v in next, new:GetChildren() do if v.ClassName:find('Text') then v:Destroy() end end&#13;
          else&#13;
          chatbar.TargetTextChannel:SendAsync(newChatBar.Text)&#13;
            end&#13;
            newChatBar.Text = ''&#13;
        end&#13;
    end&#13;
)&#13;
&#13;
    &#13;
    game:GetService('TextChatService').MessageReceived:Connect(&#13;
        function(Message)&#13;
           if Message.TextSource == nil then return end&#13;
            &#13;
            local matched, matched2, fulltext = string.match(Message.Text, '%*%*(.-)%*%*'), string.match(Message.Text, '%@'), Message.Text&#13;
            if matched2 and table.find(Plrs, '@'..matched2) then&#13;
             fulltext = fulltext:gsub(matched2, '&lt;font size = '20'&gt;'..matched2..'&lt;/font&gt;')&#13;
end&#13;
           &#13;
       if matched then&#13;
        fulltext = fulltext:gsub(matched, [[&lt;b&gt;&lt;font size = '15'&gt;&lt;font color = 'rgb(215, 215, 215)'&gt;]]..matched..'&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;')&#13;
      end&#13;
         &#13;
                addMessage(fulltext, game:GetService('Players')[Message.TextSource.Name], Message.TextChannel)&#13;
      &#13;
                new.CanvasPosition += Vector2.new(0, 50)&#13;
                CL = CL..'@'..game:GetService('Players')[Message.TextSource.Name].DisplayName..': '..Message.Text..'\n'&#13;
            end&#13;
    )&#13;
    print('TCS+')&#13;
end&#13;
game:GetService('UserInputService').InputBegan:Connect(&#13;
    function(Input)&#13;
        if Input.KeyCode == Enum.KeyCode.Slash then&#13;
            newChatBar:CaptureFocus()&#13;
        end&#13;
    end&#13;
)&#13;
old =&#13;
    hookmetamethod(&#13;
    game,&#13;
    '__namecall',&#13;
    function(Self, ...)&#13;
        local Args = {...}&#13;
        if getnamecallmethod() == 'DisplaySystemMessage' then&#13;
        local disp = 'System'&#13;
        local label = Instance.new('TextLabel', new)&#13;
      &#13;
&#13;
        label.BackgroundTransparency = 1&#13;
        label.Font = Enum.Font.GothamBlack&#13;
        label.RichText = true&#13;
        label.Text = string.format('[%s]: &lt;font size = '%d'&gt;%s&lt;/font&gt;', disp, 14, Args[1])&#13;
        label.TextColor3 = Color3.fromRGB(200, 200, 200)&#13;
        label.Size = UDim2.new(0, 220, 0, 30)&#13;
        label.TextSize = 15&#13;
        label.Name = 'A'&#13;
        end&#13;
        return old(Self, ...)&#13;
    end&#13;
)&#13;
&#13;
game:GetService('CoreGui').TopBarApp.TopBarFrame.LeftFrame.ChatIcon.Background.MouseButton1Click:Connect(function()&#13;
    new.Visible = not new.Visible&#13;
    newChatBar.Visible = not newChatBar.Visible&#13;
      end)&#13;
&#13;
chatbar.TargetTextChannel:DisplaySystemMessage('你好, ' .. game:GetService('Players').LocalPlayer.DisplayName..'!')&#13;
```&#13;
&#13;
希望对你有帮助&#13;
此版本有为测试版，请不要介意。</description><guid isPermaLink="true">https://kssklol.github.io/post/liao-tian-kuang.html</guid><pubDate>Tue, 25 Jun 2024 10:31:55 +0000</pubDate></item><item><title>注入器函数</title><link>https://kssklol.github.io/post/zhu-ru-qi-han-shu.html</link><description>**增加了一些注入器缺少的函数**&#13;
&#13;
以下是函数：&#13;
&gt;debug.getinfo&#13;
&gt;getcallingscript&#13;
&#13;
&#13;
下面是脚本：&#13;
&#13;
```lua&#13;
local dbg = {}&#13;
function getcallingscript()&#13;
 local s = debug.info(1, 's')&#13;
 for i, v in next, game:GetDescendants() do&#13;
  if v:GetFullName() == s then return v end&#13;
 end&#13;
 return nil&#13;
end&#13;
function dbg.getinfo(thread)&#13;
 local CurrentLine = tonumber(debug.info(thread, 'l'))&#13;
 local Source = debug.info(thread, 's')&#13;
 local name = debug.info(thread, 'n')&#13;
 local numparams, isvrg = debug.info(thread, 'a')&#13;
 if #name == 0 then name = nil end&#13;
 local a, b = debug.info(thread, 'a')&#13;
 return {&#13;
  ['currentline'] = CurrentLine,&#13;
  ['Source'] = Source,&#13;
  ['name'] = tostring(name),&#13;
  ['numparams'] = tonumber(numparams),&#13;
  ['is_vararg'] = isvrg and 1 or 0,&#13;
  ['short_src'] = tostring(Source:sub(1, 60))&#13;
  }&#13;
end&#13;
return dbg&#13;
```。</description><guid isPermaLink="true">https://kssklol.github.io/post/zhu-ru-qi-han-shu.html</guid><pubDate>Tue, 25 Jun 2024 10:21:08 +0000</pubDate></item><item><title>鲨脚本</title><link>https://kssklol.github.io/post/sha-jiao-ben.html</link><description>鲨脚本&#13;
&#13;
```lua&#13;
loadstring(game:HttpGet'https://raw.githubusercontent.com/kssklol/script-hub/main/script.lua')()&#13;
```&#13;
优点：&#13;
&gt;UI简洁&#13;
&gt;实用性强&#13;
&#13;
缺点：&#13;
&gt;更新慢&#13;
&gt;不活跃&#13;
&#13;
&gt;[!TIP]&#13;
&gt;建议使用忍者注入器。</description><guid isPermaLink="true">https://kssklol.github.io/post/sha-jiao-ben.html</guid><pubDate>Tue, 25 Jun 2024 04:00:01 +0000</pubDate></item></channel></rss>